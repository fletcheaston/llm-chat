// This file is auto-generated by @hey-api/openapi-ts
import type { Client, Options as ClientOptions, TDataShape } from "@hey-api/client-fetch";

import { client as _heyApiClient } from "./client.gen";
import type {
    CheckLoginData,
    CheckLoginErrors,
    CheckLoginResponses,
    LogoutData,
    LogoutResponses,
} from "./types.gen";

export type Options<
    TData extends TDataShape = TDataShape,
    ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Check Login
 */
export const checkLogin = <ThrowOnError extends boolean = false>(
    options?: Options<CheckLoginData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        CheckLoginResponses,
        CheckLoginErrors,
        ThrowOnError
    >({
        url: "/api/auth/login",
        ...options,
    });
};

/**
 * Logout
 */
export const logout = <ThrowOnError extends boolean = false>(
    options?: Options<LogoutData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).post<LogoutResponses, unknown, ThrowOnError>({
        url: "/api/auth/logout",
        ...options,
    });
};
